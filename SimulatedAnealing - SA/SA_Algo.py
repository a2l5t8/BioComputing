import random
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt

def load_data(filename) :

    f = open(filename, "r")
    lines = f.readlines()

    n = int(lines[0])

    dist = []
    for i in range(n) : 
        dist.append(list(map(int, lines[i + 2].split())))

    flow = []
    for i in range(n) :
        flow.append(list(map(int, lines[n + 2 + i + 2 - 1].split())))

    return n, np.array(dist), np.array(flow)


def Energy(sol) : 
    global dist, flow
    return np.sum(flow * dist[np.ix_(sol,sol)])

def perturbation(sol) : 
    new_sol = sol.copy()
    i = random.randrange(len(sol))
    j = random.randrange(len(sol))

    new_sol[i], new_sol[j] = new_sol[j], new_sol[i]
    return new_sol

def acceptance(delta_E, T) : 
    if(delta_E < 0) : 
        return True
    
    r = random.random()
    if(r < np.exp(-delta_E/T)) : 
        return True

    return False

def SA(n, dist, flow, epoch = 100, alpha = 0.99, Tmax = 10000, Tmin = 0.001) : 
    bst = 5000000
    bst_sol = np.random.permutation(n)

    for _ in range(epoch) : 
        T = Tmax
        sol = np.random.permutation(n)
        E = Energy(sol)

        while(T > Tmin) :
            sol_new = perturbation(sol)
            E_new = Energy(sol_new)

            delta_E = E_new - E

            if(acceptance(delta_E, T)) : 
                sol = sol_new
                E = E_new
            
            T *= alpha
        
        if(E < bst) : 
            bst = E
            bst_sol = sol
            
    return (bst, bst_sol)

##############################################################################################################
##############################################################################################################
##############################################################################################################
####################################################   TEST   ################################################
##############################################################################################################
##############################################################################################################
##############################################################################################################



##############################################################################################################
##################################################   CASE (1)   ##############################################
##############################################################################################################

n, dist, flow = load_data("chr12a.dat")
SA(n, dist, flow)


##############################################################################################################
##################################################   CASE (2)   ##############################################
##############################################################################################################

n, dist, flow = load_data("esc32a.dat")
SA(n, dist, flow)

##############################################################################################################
##################################################   CASE (3)   ##############################################
##############################################################################################################

n, dist, flow = load_data("nug20.dat")
SA(n, dist, flow)

##############################################################################################################
##################################################   CASE (4)   ##############################################
##############################################################################################################

n, dist, flow = load_data("tai30a.dat")
SA(n, dist, flow)

##############################################################################################################
##################################################   CASE (5)   ##############################################
##############################################################################################################

n, dist, flow = load_data("lipa50a.dat")
SA(n, dist, flow)